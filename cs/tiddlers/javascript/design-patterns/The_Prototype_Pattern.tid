created: 20150527133037087
modified: 20150527133134291
tags: Javascript
title: The Prototype Pattern
type: text/vnd.tiddlywiki
url: https://carldanley.com/js-prototype-pattern/

! Intro

The prototype pattern focuses on creating an object that can be used as a blueprint for other objects through prototypal inheritance. This pattern is inherently easy to work with in JavaScript because of the native support for prototypal inheritance in JS which means we don't need to spend time or effort imitating this topology.

! Advantages

* New objects created from the "skeleton" of an existing object inherit references to existing functions on the prototype chain, thus boosting performance and keeping memory footprints to a minimum.
* Great for an application where the focus is on object creation

! Disadvantages

* Overkill for a project that uses very few objects and/or does not have an underlying emphasis on the extension of prototype chains

! Example

```
// build our blueprint object
var MyBluePrint = function MyBluePrintObject() {
  
  this.someFunction = function someFunction() {
    alert( 'some function' );
  };
  
  this.someOtherFunction = function someOtherFunction() {
    alert( 'some other function' );
  };
  
  this.showMyName = function showMyName() {
    alert( this.name );
  };
  
};
 
function MyObject() {
  this.name = 'testing';
}
MyObject.prototype = new MyBluePrint();
 
// example usage
var testObject = new MyObject();
testObject.someFunction(); // alerts "some function"
testObject.someOtherFunction(); // alerts "some other function"
testObject.showMyName(); // alerts "testing"
```